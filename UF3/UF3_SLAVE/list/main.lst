C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE c\main.c OPTIMIZE(8,SPEED) BROWSE NOINTPROMOTE INCDIR(.\h) DEBUG OBJECTEXT
                    -END PRINT(.\list\main.lst) TABS(2) OBJECT(.\output\main.obj)

line level    source

   1          #include "h\SC92F732X_C.h"
   2          #include "732X_IO.h"
   3          #include "MYDEFINE.H"
   4          #include"intrins.h"
   5          #include "push.h"
   6          #include "tim1.h"
   7          #include "key.h"
   8          
   9          unsigned char u8time_cnt_flag;
  10          unsigned long int u8time_cnt,auto_stop_cnt30s,cnt,cnt1,cnt2;
  11          unsigned int i;
  12          unsigned char PUSHA1_FLAG,PUSHA2_FLAG,PUSHB1_FLAG,PUSHB2_FLAG,PUSH_STOP_FLAG,auto_stop_flag,auto_close_fla
             -g;
  13          
  14          void UARTwork(void)
  15          {
  16   1          P1CON=0X080;
  17   1          P1PH=0X04;   //TX为强推输出，RX为带上拉输入；
  18   1          P13=1;     //TX初始高电平；
  19   1          SCON=0X50;   //方式1，允许接收数据
  20   1          PCON |=0X80; //方式1
  21   1          T2CON=0x00;  //使用定时器1作UART时钟
  22   1          TMOD=0X20;   //定时器1  8位自动重载0x20
  23   1          TMCON=0X02;  //定时器1   Fsys；0x02
  24   1          TL1=217;    
  25   1          TH1=217;    //UART 波特率24M情况下=38400；
  26   1          TR1=0;
  27   1          ET1=1;       //Timer1使能
  28   1          TR1=1;       //启动Timer0
  29   1          EUART=1;     //允许UART中断
  30   1          EA=1;      //开总中断
  31   1      }
  32          
  33          void uart()interrupt 4
  34          { 
  35   1        if(TI)
  36   1        {
  37   2          TI=0;              //中断进来要把TI清0
  38   2          SBUF=0X68;         //发送0X68
  39   2        }
  40   1        if(RI)                 //接收中断
  41   1        {
  42   2          RI=0;              //中断进来要把RI清0  
  43   2          i=SBUF;         //把i数据发送到SBUF中
  44   2          if(i == 0x10)
  45   2          {
  46   3            
  47   3            PUSHA1_FLAG = 1;
  48   3            PUSHA2_FLAG = 0;
  49   3            PUSHB1_FLAG = 0;
  50   3            PUSHB2_FLAG = 0;    
  51   3          }
  52   2          else if(i == 0x20)
  53   2          {
C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 2   

  54   3            PUSHA1_FLAG = 0;
  55   3            PUSHA2_FLAG = 1;
  56   3            PUSHB1_FLAG = 0;
  57   3            PUSHB2_FLAG = 0;
  58   3          }
  59   2          else if(i == 0x30)
  60   2          {
  61   3            PUSHA1_FLAG = 0;
  62   3            PUSHA2_FLAG = 0;
  63   3            PUSHB1_FLAG = 1;
  64   3            PUSHB2_FLAG = 0;
  65   3          }
  66   2          else if(i == 0x40)
  67   2          { 
  68   3            PUSHA1_FLAG = 0;
  69   3            PUSHA2_FLAG = 0;
  70   3            PUSHB1_FLAG = 0;
  71   3            PUSHB2_FLAG = 1;
  72   3          }
  73   2          else if(i == 0x55)
  74   2          {
  75   3            //P2 = 0X00;
  76   3            //P0 = 0X00;
  77   3            PUSHA1_FLAG = 0;
  78   3            PUSHA2_FLAG = 0;
  79   3            PUSHB1_FLAG = 0;
  80   3            PUSHB2_FLAG = 0;
  81   3          }
  82   2          else
  83   2          {
  84   3            PUSHA1_FLAG = 0;
  85   3            PUSHA2_FLAG = 0;
  86   3            PUSHB1_FLAG = 0;
  87   3            PUSHB2_FLAG = 0;
  88   3          }
  89   2        }
  90   1      }
  91          
  92          /*************************************************************
  93          说明：main()
  94          
  95          ***************************************************************/
  96          void main()
  97          {
  98   1        Key_Init();
  99   1        Push_Init();
 100   1        Tim1_Init();
 101   1        UARTwork();
 102   1      
 103   1        while(1)
 104   1        {
 105   2          WDTCON |= 0x10;       //清看门狗    
 106   2          if(0 == IO_KEY_CONTROL_PIN)
 107   2          {
 108   3            auto_close_flag = 1;
 109   3            u8time_cnt_flag = 0;
 110   3            auto_stop_flag  = 0;
 111   3            
 112   3            u8time_cnt = 0;
 113   3            cnt2 = 0;
 114   3            cnt1 = 0;
 115   3            cnt  = 0;
C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 3   

 116   3            auto_stop_cnt30s = 0;
 117   3            
 118   3            if((0 == IO_KEY6_PIN)&&(0 == IO_KEY5_PIN))
 119   3            {
 120   4              if(PUSHA1_FLAG)
 121   4              {
 122   5              PUSHA1_OPEN;
 123   5              PUSHA2_CLOSE;
 124   5              PUSHB1_CLOSE;
 125   5              PUSHB2_CLOSE;
 126   5              }
 127   4              else if(PUSHA2_FLAG)
 128   4              {
 129   5              PUSHA1_CLOSE;
 130   5              PUSHA2_OPEN;
 131   5              PUSHB1_CLOSE;
 132   5              PUSHB2_CLOSE;
 133   5              }
 134   4              else if(PUSHB1_FLAG)
 135   4              {
 136   5              PUSHA1_CLOSE;
 137   5              PUSHA2_CLOSE;
 138   5              PUSHB1_OPEN;
 139   5              PUSHB2_CLOSE;
 140   5              }
 141   4              else if(PUSHB2_FLAG)
 142   4              {
 143   5              PUSHA1_CLOSE;
 144   5              PUSHA2_CLOSE;
 145   5              PUSHB1_CLOSE;
 146   5              PUSHB2_OPEN;
 147   5              }
 148   4              else if((0 == PUSHA1_FLAG)&&(0 == PUSHA2_FLAG)&&(0 == PUSHB1_FLAG)&&(0 == PUSHB2_FLAG))
 149   4              {
 150   5              PUSHA1_CLOSE;
 151   5              PUSHA2_CLOSE;
 152   5              PUSHB1_CLOSE;
 153   5              PUSHB2_CLOSE;
 154   5              } 
 155   4              else
 156   4              {
 157   5              PUSHA1_CLOSE;
 158   5              PUSHA2_CLOSE;
 159   5              PUSHB1_CLOSE;
 160   5              PUSHB2_CLOSE;
 161   5              }
 162   4            }
 163   3            else if((1 == IO_KEY6_PIN)&&(1 == IO_KEY5_PIN))
 164   3            {
 165   4              if(PUSHA1_FLAG)
 166   4              {
 167   5              PUSHA2_OPEN;
 168   5              PUSHA1_CLOSE;
 169   5              PUSHB1_CLOSE;
 170   5              PUSHB2_CLOSE;
 171   5              }
 172   4              else if(PUSHA2_FLAG)
 173   4              {
 174   5              PUSHA2_CLOSE;
 175   5              PUSHA1_OPEN;
 176   5              PUSHB1_CLOSE;
 177   5              PUSHB2_CLOSE;
C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 4   

 178   5              }
 179   4              else if(PUSHB1_FLAG)
 180   4              {
 181   5              PUSHA1_CLOSE;
 182   5              PUSHA2_CLOSE;
 183   5              PUSHB2_OPEN;
 184   5              PUSHB1_CLOSE;
 185   5              }
 186   4              else if(PUSHB2_FLAG)
 187   4              {
 188   5              PUSHA1_CLOSE;
 189   5              PUSHA2_CLOSE;
 190   5              PUSHB2_CLOSE;
 191   5              PUSHB1_OPEN;
 192   5              }
 193   4              else if((0 == PUSHA1_FLAG)&&(0 == PUSHA2_FLAG)&&(0 == PUSHB1_FLAG)&&(0 == PUSHB2_FLAG))
 194   4              {
 195   5              PUSHA1_CLOSE;
 196   5              PUSHA2_CLOSE;
 197   5              PUSHB1_CLOSE;
 198   5              PUSHB2_CLOSE;
 199   5              } 
 200   4              else
 201   4              {
 202   5              PUSHA1_CLOSE;
 203   5              PUSHA2_CLOSE;
 204   5              PUSHB1_CLOSE;
 205   5              PUSHB2_CLOSE;
 206   5              }
 207   4            }
 208   3            else if((1 == IO_KEY6_PIN)&&(0 == IO_KEY5_PIN))
 209   3            {
 210   4              if(PUSHA1_FLAG)
 211   4              {
 212   5              PUSHA2_OPEN;
 213   5              PUSHA1_CLOSE;
 214   5              PUSHB1_CLOSE;
 215   5              PUSHB2_CLOSE;
 216   5              }
 217   4              else if(PUSHA2_FLAG)
 218   4              {
 219   5              PUSHA2_CLOSE;
 220   5              PUSHA1_OPEN;
 221   5              PUSHB1_CLOSE;
 222   5              PUSHB2_CLOSE;
 223   5              }
 224   4              else if(PUSHB1_FLAG)
 225   4              {
 226   5              PUSHA1_CLOSE;
 227   5              PUSHA2_CLOSE;
 228   5              PUSHB1_OPEN;
 229   5              PUSHB2_CLOSE;
 230   5              }
 231   4              else if(PUSHB2_FLAG)
 232   4              {
 233   5              PUSHA1_CLOSE;
 234   5              PUSHA2_CLOSE;
 235   5              PUSHB1_CLOSE;
 236   5              PUSHB2_OPEN;
 237   5              }
 238   4              else if((0 == PUSHA1_FLAG)&&(0 == PUSHA2_FLAG)&&(0 == PUSHB1_FLAG)&&(0 == PUSHB2_FLAG))
 239   4              {
C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 5   

 240   5              PUSHA1_CLOSE;
 241   5              PUSHA2_CLOSE;
 242   5              PUSHB1_CLOSE;
 243   5              PUSHB2_CLOSE;
 244   5              } 
 245   4              else
 246   4              {
 247   5              PUSHA1_CLOSE;
 248   5              PUSHA2_CLOSE;
 249   5              PUSHB1_CLOSE;
 250   5              PUSHB2_CLOSE;
 251   5              }
 252   4            }
 253   3            else if((0 == IO_KEY6_PIN)&&(1 == IO_KEY5_PIN))
 254   3            {
 255   4              if(PUSHA1_FLAG)
 256   4              {
 257   5              PUSHA1_OPEN;
 258   5              PUSHA2_CLOSE;
 259   5              PUSHB1_CLOSE;
 260   5              PUSHB2_CLOSE;
 261   5              }
 262   4              else if(PUSHA2_FLAG)
 263   4              {
 264   5              PUSHA1_CLOSE;
 265   5              PUSHA2_OPEN;
 266   5              PUSHB1_CLOSE;
 267   5              PUSHB2_CLOSE;
 268   5              }
 269   4              else if(PUSHB1_FLAG)
 270   4              {
 271   5              PUSHA1_CLOSE;
 272   5              PUSHA2_CLOSE;
 273   5              PUSHB2_OPEN;
 274   5              PUSHB1_CLOSE;
 275   5              }
 276   4              else if(PUSHB2_FLAG)
 277   4              {
 278   5              PUSHA1_CLOSE;
 279   5              PUSHA2_CLOSE;
 280   5              PUSHB2_CLOSE;
 281   5              PUSHB1_OPEN;
 282   5              }
 283   4              else if((0 == PUSHA1_FLAG)&&(0 == PUSHA2_FLAG)&&(0 == PUSHB1_FLAG)&&(0 == PUSHB2_FLAG))
 284   4              {
 285   5              PUSHA1_CLOSE;
 286   5              PUSHA2_CLOSE;
 287   5              PUSHB1_CLOSE;
 288   5              PUSHB2_CLOSE;
 289   5              } 
 290   4              else
 291   4              {
 292   5              PUSHA1_CLOSE;
 293   5              PUSHA2_CLOSE;
 294   5              PUSHB1_CLOSE;
 295   5              PUSHB2_CLOSE;
 296   5              }
 297   4            }
 298   3          }
 299   2          else
 300   2          {
 301   3             if(0 == cnt2)
C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 6   

 302   3             {
 303   4               cnt2++;
 304   4               PUSHA1_CLOSE;
 305   4               PUSHA2_CLOSE;
 306   4               PUSHB1_CLOSE;
 307   4               PUSHB2_CLOSE;
 308   4             }
 309   3             if(auto_close_flag)
 310   3             {
 311   4                u8time_cnt_flag = 1;
 312   4                if(u8time_cnt > 10000)   //3S
 313   4                {
 314   5                  cnt1++;
 315   5                  u8time_cnt = 0;
 316   5                  if(cnt1 > 5)
 317   5                  {
 318   6                    cnt1 = 0;
 319   6                    u8time_cnt_flag = 0;
 320   6                    u8time_cnt = 0;
 321   6                    PUSHA2_OPEN;
 322   6                    auto_stop_flag = 1;
 323   6                  }
 324   5                }
 325   4                if(auto_stop_cnt30s > 60000)//30S
 326   4                {
 327   5                  cnt++;
 328   5                  auto_stop_cnt30s = 0;
 329   5                  if(cnt > 2)
 330   5                  {
 331   6                    cnt = 0;
 332   6                    auto_stop_flag = 0;
 333   6                    auto_stop_cnt30s = 0;
 334   6                    PUSHA2_CLOSE;
 335   6                    auto_close_flag = 0;
 336   6                  }
 337   5                }
 338   4             }
 339   3             if(0 == IO_KEY5_PIN)
 340   3             {
 341   4               if(PUSHB1_FLAG)
 342   4               {
 343   5                 PUSHB1_OPEN;
 344   5               }
 345   4               else if(PUSHB2_FLAG)
 346   4               {
 347   5                 PUSHB2_OPEN;
 348   5               }
 349   4               else if((0 == PUSHB1_FLAG)&&(0 == PUSHB2_FLAG))
 350   4               {
 351   5                 PUSHB1_CLOSE;
 352   5                 PUSHB2_CLOSE;
 353   5               }
 354   4             }
 355   3             else if(1 == IO_KEY5_PIN)
 356   3             {
 357   4               if(PUSHB1_FLAG)
 358   4               {
 359   5                 PUSHB2_OPEN;
 360   5               }
 361   4               else if(PUSHB2_FLAG)
 362   4               {
 363   5                 PUSHB1_OPEN;
C51 COMPILER V9.59.0.0   MAIN                                                              07/05/2018 16:01:47 PAGE 7   

 364   5               }
 365   4               else if((0 == PUSHB1_FLAG)&&(0 == PUSHB2_FLAG))
 366   4               {
 367   5                 PUSHB1_CLOSE;
 368   5                 PUSHB2_CLOSE;
 369   5               }
 370   4             }  
 371   3          }
 372   2        }
 373   1      }
 374          void timer0()interrupt 1        //Timer0??? 1
 375          {
 376   1        TH0=(65536-600)/256;          //??????
 377   1        TL0=(65536-600)%256;
 378   1        if(u8time_cnt_flag)
 379   1        {
 380   2          u8time_cnt++;
 381   2        }
 382   1        if(auto_stop_flag)
 383   1        {
 384   2          auto_stop_cnt30s++;
 385   2        }
 386   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    915    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
